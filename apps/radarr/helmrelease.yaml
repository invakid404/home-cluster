apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: &app radarr
  namespace: apps
spec:
  chart:
    spec:
      chart: app-template
      version: 0.2.2
      interval: 10m0s
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: apps
  interval: 10m0s
  values:
    image:
      repository: ghcr.io/onedr0p/radarr-develop
      tag: 4.3.0.6671@sha256:edb7ee1c4c50119263c76d9073dcebbe4876506bb22dd583e8ef50241eb597d9

    podSecurityContext:
      runAsUser: ${SQUASH_UID}
      runAsGroup: ${SQUASH_UID}
      fsGroup: ${SQUASH_UID}

    env:
      TZ: ${TIMEZONE}
      RADARR__INSTANCE_NAME: Radarr
      RADARR__PORT: &port 7878
      RADARR__APPLICATION_URL: "https://radarr.lab.${BASE_DOMAIN}"
      RADARR__LOG_LEVEL: info
      RADARR__POSTGRES_HOST: postgres.core.svc.cluster.local
      RADARR__POSTGRES_MAIN_DB: ${RADARR_MAIN_DB}
      RADARR__POSTGRES_LOG_DB: ${RADARR_LOG_DB}
      RADARR__POSTGRES_USER: postgres
      RADARR__POSTGRES_PASSWORD:
        secretKeyRef:
          name: postgres-creds
          key: postgres-password
      RADARR__API_KEY:
        secretKeyRef:
          name: *app
          key: api-key

    service:
      main:
        ports:
          http:
            port: *port

    ingress:
      main:
        enabled: true
        ingressClassName: "nginx"
        annotations:
          nginx.ingress.kubernetes.io/configuration-snippet: |
            proxy_set_header Accept-Encoding "";
            sub_filter '</head>' '<link rel="stylesheet" type="text/css" href="https://theme-park.dev/css/base/radarr/nord.css"></head>';
            sub_filter_once on;
          cert-manager.io/cluster-issuer: letsencrypt
          hajimari.io/enable: "true"
          hajimari.io/icon: filmstrip
          external-dns.alpha.kubernetes.io/target: "${PRIVATE_IP}"
        hosts:
          - host: &radarr-host "radarr.lab.${BASE_DOMAIN}"
            paths:
              - path: /
        tls:
          - hosts:
              - *radarr-host
            secretName: letsencrypt-radarr

    persistence:
      config:
        enabled: true
        existingClaim: radarr-config

      data:
        enabled: true
        type: nfs
        server: "${NAS_ADDRESS}"
        path: "${TORRENTS_VOLUME}"
        mountPath: /data/nas-torrents

    podAnnotations:
      secret.reloader.stakater.com/reload: *app

    resources:
      requests:
        cpu: 15m
        memory: 164M
      limits:
        memory: 1408M
