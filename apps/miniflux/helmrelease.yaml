---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: &app miniflux
  namespace: apps
spec:
  interval: 10m0s
  chart:
    spec:
      chart: app-template
      version: 2.0.3
      interval: 10m0s
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: apps
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    controllers:
      main:
        initContainers:
          init-db:
            image:
              repository: ghcr.io/onedr0p/postgres-init
              tag: 14.9@sha256:8d5134c75858d0e4672c5301cf225896be5347564cc3b79cab9dd38e37f0ea94
            env:
              - name: INIT_POSTGRES_HOST
                value: postgres.core.svc.cluster.local
              - name: INIT_POSTGRES_SUPER_USER
                value: postgres
              - name: INIT_POSTGRES_SUPER_PASS
                value: ${POSTGRES_PASSWORD}
              - name: INIT_POSTGRES_USER
                value: postgres
              - name: INIT_POSTGRES_PASS
                value: ${POSTGRES_PASSWORD}
              - name: INIT_POSTGRES_DBNAME
                value: *app

        containers:
          main:
            image:
              repository: ghcr.io/miniflux/miniflux
              tag: 2.0.49@sha256:8fed9d8cd79b7d5e3c008a54a5c1f48523199b9fccf634ca6bdf075bb12e182c
            envFrom:
              - secretRef:
                  name: *app
            probes:
              liveness:
                enabled: true
                custom: true
                spec:
                  initialDelaySeconds: 30
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
                  httpGet:
                    path: /healthcheck
                    port: 8080

        strategy: RollingUpdate
        annotations:
          reloader.stakater.com/auto: "true"

    service:
      main:
        ports:
          http:
            port: 8080

    ingress:
      main:
        enabled: true
        className: nginx
        annotations:
          external-dns.alpha.kubernetes.io/target: "${PUBLIC_IP}"
          cert-manager.io/cluster-issuer: letsencrypt
          gethomepage.dev/enabled: "true"
          gethomepage.dev/name: Miniflux
          gethomepage.dev/description: Minimalist and opinionated feed reader
          gethomepage.dev/group: Applications
          gethomepage.dev/icon: miniflux.png
        hosts:
          - host: &host "rss.lab.${BASE_DOMAIN}"
            paths:
              - path: /
                service:
                  name: main
                  port: http
        tls:
          - hosts:
              - *host
            secretName: letsencrypt-miniflux
